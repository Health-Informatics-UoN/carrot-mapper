@tailwind base;
@tailwind utilities;
@tailwind components;

/* shadcn/ui color tokens for dialogs and backgrounds */
:root {
  --background: 0 0% 100%;
  --foreground: 222.2 47.4% 11.2%;
  --popover: 0 0% 100%;
  --popover-foreground: 222.2 47.4% 11.2%;
  --muted: 210 40% 96.1%;
  --muted-foreground: 215.4 16.3% 46.9%;
}
.dark {
  --background: 0 0% 7%;
  --foreground: 210 40% 98%;
  --popover: 220 14.3% 17.9%; /* lighter than before */
  --popover-foreground: 210 40% 98%;
  --muted: 217.2 32.6% 17.5%;
  --muted-foreground: 215 20.2% 65.1%;
}

/* Show shadcn/ui muted grey background on hover for all circular ghost buttons */
button.rounded-full:hover,
button.rounded-full:focus-visible {
  background-color: hsl(var(--muted));
  transition: background-color 0.2s;
}

/* React Select using shadcn/ui tokens */
.my-react-select__menu {
  background-color: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  z-index: 100;
}

.my-react-select__option {
  background-color: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  cursor: pointer;
  transition: background 0.2s;
}

.my-react-select__option--is-focused {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.my-react-select__option--is-selected {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.my-react-select__control {
  background-color: hsl(var(--muted));
  color: hsl(var(--foreground));
  border: 1px solid hsl(var(--muted-foreground));
}

.my-react-select__single-value,
.my-react-select__multi-value__label {
  color: hsl(var(--foreground));
}

.my-react-select__multi-value__remove {
  color: #ef4444 !important; /* Tailwind's red-500 */
  background: transparent !important;
  cursor: pointer;
  transition: color 0.2s;
}
.my-react-select__multi-value__remove:hover {
  color: #b91c1c !important; /* Tailwind's red-700 for hover */
  background: transparent !important;
}

.dark .my-react-select__option--is-focused {
  background-color: hsl(var(--muted)) !important;
  color: hsl(var(--foreground)) !important;
}

.dark .my-react-select__option--is-selected {
  background-color: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
}
