name: Build and Deploy Airflow to Dev and Test

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-publish-webserver:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ccomreg.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME_DEV }}
          password: ${{ secrets.REGISTRY_PASSWORD_DEV }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ccomreg.azurecr.io/${{ secrets.REGISTRY_USERNAME_DEV }}/latest:${{ github.sha }}
          file: ./app/airflow/Dockerfile.webserver

  build-and-publish-scheduler:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ccomreg.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME_DEV }}
          password: ${{ secrets.REGISTRY_PASSWORD_DEV }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ccomreg.azurecr.io/${{ secrets.REGISTRY_USERNAME_DEV }}/latest:${{ github.sha }}
          file: ./app/airflow/Dockerfile.scheduler

  # Deploy Airflow Webserver Dev
  deploy-webserver-dev:
    runs-on: ubuntu-latest
    needs: [build-and-publish-webserver]
    environment:
      name: "dev"
      url: ${{ steps.deploy-airflow-webserver-dev.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-airflow-webserver-dev
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AIRFLOW_WEBSERVER_NAME }}
          publish-profile: ${{ secrets.AIRFLOW_WEBSERVER_PUBLISH_PROFILE }}
          images: "ccomreg.azurecr.io/${{ secrets.REGISTRY_USERNAME_DEV }}/latest:${{ github.sha }}"

  # Deploy Airflow Scheduler Dev
  deploy-scheduler-dev:
    runs-on: ubuntu-latest
    needs: [build-and-publish-scheduler]
    environment:
      name: "dev"
      url: ${{ steps.deploy-airflow-scheduler-dev.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-airflow-scheduler-dev
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AIRFLOW_SCHEDULER_NAME }}
          publish-profile: ${{ secrets.AIRFLOW_SCHEDULER_PUBLISH_PROFILE }}
          images: "ccomreg.azurecr.io/${{ secrets.REGISTRY_USERNAME_DEV }}/latest:${{ github.sha }}"

  # TODO: When test env is ready, enable the following steps
  # # Deploy Airflow Webserver Test
  # deploy-webserver-test:
  #   runs-on: ubuntu-latest
  #   needs: [deploy-webserver-dev]
  #   environment:
  #     name: "test"
  #     url: ${{ steps.deploy-airflow-webserver-test.outputs.webapp-url }}

  #   steps:
  #     - name: Deploy to Azure Web App
  #       id: deploy-airflow-webserver-test
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ vars.AIRFLOW_WEBSERVER_NAME }}
  #         publish-profile: ${{ secrets.AIRFLOW_WEBSERVER_PUBLISH_PROFILE }}
  #         images: "ccomreg.azurecr.io/${{ secrets.REGISTRY_USERNAME_DEV }}/latest:${{ github.sha }}"

  # # Deploy Airflow Scheduler Test
  # deploy-scheduler-test:
  #   runs-on: ubuntu-latest
  #   needs: [deploy-scheduler-dev]
  #   environment:
  #     name: "test"
  #     url: ${{ steps.deploy-airflow-scheduler-test.outputs.webapp-url }}

  #   steps:
  #     - name: Deploy to Azure Web App
  #       id: deploy-airflow-scheduler-test
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ vars.AIRFLOW_SCHEDULER_NAME }}
  #         publish-profile: ${{ secrets.AIRFLOW_SCHEDULER_PUBLISH_PROFILE }}
  #         images: "ccomreg.azurecr.io/${{ secrets.REGISTRY_USERNAME_DEV }}/latest:${{ github.sha }}"
