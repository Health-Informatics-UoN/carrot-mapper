name: carrot-mapper-dev

services:
  db:
    image: postgres:13
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data

  frontend:
    image: carrot-frontend
    build:
      context: app/next-client-app
      dockerfile: Dockerfile
      target: dev
    command: npm run dev
    ports:
      - 3000:3000
    environment:
      - BACKEND_URL=http://api:8000
      - BACKEND_ORIGIN=localhost:8000
      - NEXTAUTH_URL=http://localhost:3000/
      - NEXTAUTH_SECRET=verycomplexsecretkey
      - NEXTAUTH_BACKEND_URL=http://api:8000/api/
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    volumes:
      - ./app/next-client-app:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api

  omop-lite:
    image: ghcr.io/andyrae/omop-lite
    volumes:
      - ./vocabs:/vocabs
    depends_on:
      - db
    environment:
      - DB_PASSWORD=postgres
      - DB_NAME=postgres

  api:
    image: carrot-backend
    build:
      context: app
      dockerfile: api/Dockerfile
    ports:
      - 8000:8000
    environment:
      - FRONTEND_URL=http://frontend:3000
      - ALLOWED_HOSTS=['localhost', '127.0.0.1','api', 'workers']
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DEBUG=True
      - WORKERS_UPLOAD_NAME=uploadreports-local
      - SECRET_KEY=secret
      - WORKERS_URL=http://workers:80
      - WORKERS_RULES_NAME=RulesOrchestrator
      - WORKERS_RULES_KEY=rules_key
      - WORKERS_RULES_EXPORT_NAME=rules-exports-local
      - STORAGE_CONN_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;
      - SIGNING_KEY=secret
    volumes:
      - ./app/api:/api
      - ./app/shared:/shared
    depends_on:
      omop-lite:
        condition: service_completed_successfully

  workers:
    image: carrot-workers
    build:
      context: app
      dockerfile: workers/Dockerfile
    ports:
      - 8080:80
      - 7071:80
    environment:
      # Set Docker to look for secrets locally
      - AzureWebJobsSecretStorageType=files
      - IsEncrypted=false
      - AzureWebJobsStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;
      - FUNCTIONS_WORKER_RUNTIME=python
      - STORAGE_CONN_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;
      - APP_URL=http://api:8000/
      # Three queues below need adding to Azure local storage
      - WORKERS_UPLOAD_NAME=uploadreports-local
      - RULES_QUEUE_NAME=rules-local
      - RULES_FILE_QUEUE_NAME=rules-exports-local
      # The address that can be used to reach the function app from outside
      - WEBSITE_HOSTNAME=localhost:7071
      # Database setup
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - PYTHONPATH=/home/site/wwwroot:/home/site/wwwroot/shared
    volumes:
      - ./app/workers:/home/site/wwwroot
      - ./app/shared:/home/site/wwwroot/shared
      # Mount the local secret to Docker container
      - ./app/workers/Secrets:/azure-functions-host/Secrets/
    depends_on:
      - api
      - azurite

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    restart: always
    ports:
      - 10000:10000
      - 10001:10001
      - 10002:10002
    command: azurite --blobHost azurite --queueHost azurite --tableHost azurite --location /data --debug /data/debug.log --loose --skipApiVersionCheck
    hostname: azurite
    environment:
      - AZURITE_ACCOUNTS=devstoreaccount1:Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==

volumes:
  db_data: